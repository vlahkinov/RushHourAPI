// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prime.RushHourAPI.Data;

#nullable disable

namespace Prime.RushHourAPI.Data.Migrations
{
    [DbContext(typeof(RushHourAPIDbContext))]
    [Migration("20220411183253_updatedDatabase")]
    partial class updatedDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Prime.RushHourAPI.Data.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("FullName")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Prime.RushHourAPI.Data.Entities.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProviderId");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("Prime.RushHourAPI.Data.Entities.ActivityAppointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppointmentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("AppointmentId");

                    b.ToTable("ActivityAppointments");
                });

            modelBuilder.Entity("Prime.RushHourAPI.Data.Entities.ActivityEmployee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("ActivityEmployee");
                });

            modelBuilder.Entity("Prime.RushHourAPI.Data.Entities.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("Prime.RushHourAPI.Data.Entities.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Prime.RushHourAPI.Data.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppointmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProviderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("RatePerHour")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.HasIndex("ProviderId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Prime.RushHourAPI.Data.Entities.Provider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkingDays")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("Prime.RushHourAPI.Data.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Prime.RushHourAPI.Data.Entities.Account", b =>
                {
                    b.HasOne("Prime.RushHourAPI.Data.Entities.Role", "Role")
                        .WithMany("Account")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Prime.RushHourAPI.Data.Entities.Activity", b =>
                {
                    b.HasOne("Prime.RushHourAPI.Data.Entities.Provider", "Provider")
                        .WithMany("Activities")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("Prime.RushHourAPI.Data.Entities.ActivityAppointment", b =>
                {
                    b.HasOne("Prime.RushHourAPI.Data.Entities.Activity", "Activity")
                        .WithMany("ActivityAppointments")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.RushHourAPI.Data.Entities.Appointment", "Appointment")
                        .WithMany("ActivityAppointments")
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("Prime.RushHourAPI.Data.Entities.ActivityEmployee", b =>
                {
                    b.HasOne("Prime.RushHourAPI.Data.Entities.Activity", "Activity")
                        .WithMany("ActivityEmployees")
                        .HasForeignKey("ActivityId")
                        .IsRequired();

                    b.HasOne("Prime.RushHourAPI.Data.Entities.Employee", "Employee")
                        .WithMany("ActivityEmployees")
                        .HasForeignKey("EmployeeId")
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Prime.RushHourAPI.Data.Entities.Appointment", b =>
                {
                    b.HasOne("Prime.RushHourAPI.Data.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.RushHourAPI.Data.Entities.Employee", "Employee")
                        .WithOne("Appointment")
                        .HasForeignKey("Prime.RushHourAPI.Data.Entities.Appointment", "EmployeeId")
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Prime.RushHourAPI.Data.Entities.Client", b =>
                {
                    b.HasOne("Prime.RushHourAPI.Data.Entities.Account", "Account")
                        .WithOne("Client")
                        .HasForeignKey("Prime.RushHourAPI.Data.Entities.Client", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Prime.RushHourAPI.Data.Entities.Employee", b =>
                {
                    b.HasOne("Prime.RushHourAPI.Data.Entities.Account", "Account")
                        .WithOne("Employee")
                        .HasForeignKey("Prime.RushHourAPI.Data.Entities.Employee", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.RushHourAPI.Data.Entities.Provider", "Provider")
                        .WithMany("Employees")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("Prime.RushHourAPI.Data.Entities.Account", b =>
                {
                    b.Navigation("Client");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Prime.RushHourAPI.Data.Entities.Activity", b =>
                {
                    b.Navigation("ActivityAppointments");

                    b.Navigation("ActivityEmployees");
                });

            modelBuilder.Entity("Prime.RushHourAPI.Data.Entities.Appointment", b =>
                {
                    b.Navigation("ActivityAppointments");
                });

            modelBuilder.Entity("Prime.RushHourAPI.Data.Entities.Employee", b =>
                {
                    b.Navigation("ActivityEmployees");

                    b.Navigation("Appointment");
                });

            modelBuilder.Entity("Prime.RushHourAPI.Data.Entities.Provider", b =>
                {
                    b.Navigation("Activities");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Prime.RushHourAPI.Data.Entities.Role", b =>
                {
                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
